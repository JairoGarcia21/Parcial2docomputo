import tkinter as tk
from tkinter import filedialog
from tkinter import messagebox
from PIL import Image, ImageTk, ImageEnhance

class EditorSimple:
    def __init__(self, root):
        self.root = root
        self.root.title("UGB Editor")
        self.root.geometry("1000x800")

        self.image_path = None
        self.image = None
        self.tk_image = None

        self.button_frame = tk.Frame(self.root)
        self.button_frame.pack()

        # Crear botones para las acciones en el frame
        self.create_buttons()

        # Crear una etiqueta para mostrar la imagen
        self.image_label = tk.Label(self.root)
        self.image_label.pack()

    def create_buttons(self):
        btn_open = tk.Button(self.button_frame, text="Abrir Imagen", command=self.open_image)
        btn_open.grid(row=0, column=0)

        btn_gray = tk.Button(self.button_frame, text="Escala de Grises", command=self.apply_grayscale)
        btn_gray.grid(row=0, column=1)

        btn_rotate = tk.Button(self.button_frame, text="Rotar 90°", command=self.rotate_image)
        btn_rotate.grid(row=0, column=2)

        btn_brightness_up = tk.Button(self.button_frame, text="Aumentar Brillo", command=self.increase_brightness)
        btn_brightness_up.grid(row=0, column=3)

        btn_brightness_down = tk.Button(self.button_frame, text="Disminuir Brillo", command=self.decrease_brightness)
        btn_brightness_down.grid(row=0, column=4)

        btn_save = tk.Button(self.button_frame, text="Guardar Imagen", command=self.save_image)
        btn_save.grid(row=0, column=5)

    def open_image(self):
        # Abrir un cuadro de diálogo para seleccionar una imagen
        self.image_path = filedialog.askopenfilename(filetypes=[("Imagenes", "*.png;*.jpg;*.jpeg;*.bmp")])
        if self.image_path:
            self.image = Image.open(self.image_path)
            self.display_image()

    def display_image(self):
        # Convertir la imagen a un formato que Tkinter pueda mostrar
        self.tk_image = ImageTk.PhotoImage(self.image)
        self.image_label.config(image=self.tk_image)

    def apply_grayscale(self):
        if self.image:
            self.image = self.image.convert("L")
            self.display_image()

    def rotate_image(self):
        if self.image:
            self.image = self.image.rotate(90, expand=True)
            self.display_image()

    def increase_brightness(self):
        if self.image:
            enhancer = ImageEnhance.Brightness(self.image)
            self.image = enhancer.enhance(1.5)  
            self.display_image()

    def decrease_brightness(self):
        if self.image:
            enhancer = ImageEnhance.Brightness(self.image)
            self.image = enhancer.enhance(0.5) 
            self.display_image()

    def save_image(self):
        if self.image:
            save_path = filedialog.asksaveasfilename(defaultextension=".png",
                                                     filetypes=[("PNG files", "*.png"), ("JPEG files", "*.jpg"), ("All files", "*.*")])
            if save_path:
                self.image.save(save_path)
                messagebox.showinfo("Imagen Guardada", "La imagen ha sido guardada exitosamente.")

if __name__ == "__main__":
    root = tk.Tk()
    app = EditorSimple(root)
    root.mainloop()
